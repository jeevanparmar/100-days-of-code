# 🚀 Day 04 – #100DaysOfCode Challenge

> 📆 Date: **May 24, 2025**  
> 🔥 Focus: Problem Solving with C++

---

## ✅ LeetCode Problems Solved

### 🧮 1. Smallest Index With Digit Sum Equal to Index
- **🔗 Problem Link:** [LeetCode 3550](https://leetcode.com/problems/smallest-index-with-equal-digit-sum/)
- **📝 Description:** Find the smallest index `i` such that the digit sum of `nums[i]` equals `i`.
- **💡 Approach:**
  ```cpp
  int smallestEqual(vector<int>& nums) {
      for(int i = 0; i < nums.size(); i++) {
          int sum = 0, x = i;
          while(x) { sum += x % 10; x /= 10; }
          if(sum == nums[i]) return i;
      }
      return -1;
  }


### 🔍 2. Find Words Containing a Character
- **🔗 Problem Link:** [LeetCode 2942](https://leetcode.com/problems/find-words-containing-character/)
- **📝 Description:** Return indices of strings from an array that contain a given character.
- **💡 Approach:**
  ```cpp
  vector<int> findWordsContaining(vector<string>& words, char x) {
      vector<int> ans;
      for(int i = 0; i < words.size(); i++) {
          for(char c : words[i]) {
              if(c == x) {
                  ans.push_back(i);
                  break;
              }
          }
      }
      return ans;
  }


### 🧩 3. Remove One Element to Make Array Strictly Increasing
- **🔗 Problem Link:** [LeetCode 1909](https://leetcode.com/problems/remove-one-element-to-make-array-strictly-increasing/)
- **📝 Description:** Determine if the array can be made strictly increasing by removing one element.
- **💡 Approach:**
  ```cpp
class Solution {
public:
    bool canBeIncreasing(vector<int>& nums) {

        int first = nums[0], ans = 0, second = 0;
        for (int i = 1; i < nums.size(); i++) {
            if (first < nums[i]) {
                second = first;
                first = nums[i];
            } else if (first == nums[i] || second < nums[i]) {
                first = nums[i];
                ans++;
            } else ans++;
        }
        return ans <= 1;
    }
};


## 📚 What I Learned Today
- Refined loop and condition logic in arrays and strings.
- Improved control over nested iteration.
- Better understanding of edge cases in array manipulation.

---

## ⚙️ Tools Used
| Language | Platform | Editor |
|----------|----------|--------|
| C++      | LeetCode | Online Editor |

---

## ⏭️ Up Next
- Continue solving 2–3 LeetCode problems daily.
- Explore Python implementations for the same problems.
- Work on optimizing brute-force approaches.

---

> 🧠 *“Consistency always wins over intensity.” – Keep building daily!*
