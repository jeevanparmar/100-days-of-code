# Day 33 of #100DaysOfCode

Today I solved the following LeetCode problems:

## âœ… 766. Toeplitz Matrix

**Problem Link:** [766. Toeplitz Matrix](https://leetcode.com/problems/toeplitz-matrix/)
**Approach:**

* A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same element.
* Compare each element with its bottom-right neighbor.

```cpp
class Solution {
public:
    bool isToeplitzMatrix(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        int i = 0;
        while (i < m - 1) {
            int j = 0;
            while (j < n - 1) {
                if (matrix[i][j] != matrix[i + 1][j + 1])
                    return false;
                j++;
            }
            i++;
        }
        return true;    
    }
};
```

---

## âœ… 2138. Divide a String Into Groups of Size k

**Problem Link:** [2138. Divide a String Into Groups of Size k](https://leetcode.com/problems/divide-a-string-into-groups-of-size-k/)
**Approach:**

* Slice the string into k-length chunks.
* Pad the last group with the fill character if needed.

```cpp
class Solution {
public:
    vector<string> divideString(string s, int k, char fill) {
        vector<string> ans;
        int n = s.size();

        for (int i = 0; i < n; i += k) {
            ans.push_back(s.substr(i, k));
            if (ans[i / k].size() != k) {
                ans[i / k] += string(k - ans[i / k].size(), fill);
            }
        }

        return ans;
    }
};
```

---

## âœ… 2566. Maximum Difference by Remapping a Digit

**Problem Link:** [2566. Maximum Difference by Remapping a Digit](https://leetcode.com/problems/maximum-difference-by-remapping-a-digit/)
**Approach:**

* Replace the first non-9 digit in the number with 9 to get the max.
* Replace the first digit with 0 to get the min.
* Return the difference.

```python
class Solution(object):
    def minMaxDifference(self, num):
        str1 = str(num)
        for i in str1:
            if i == '9':
                continue
            else:
                str1 = str1.replace(i,'9')
                break
        maxn = int(str1)

        str2 = str(num)
        str2 = str2.replace(str2[0],'0')
        minn = int(str2)
        return maxn - minn
```

---

ðŸ’¡ **What I Learned:**

* Practiced 2D matrix traversal.
* Improved string grouping and formatting.
* Handled string-digit conversions and greedy replacements.

---

\#100DaysOfCode #LeetCode #CPlusPlus #Python #buildinpublic #ProblemSolving
