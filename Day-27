# Day 27 of #100DaysOfCode

Today I solved the following LeetCode problem in C++:

## âœ… 2016. Maximum Difference Between Increasing Elements  
**Problem Link:** [2016. Maximum Difference Between Increasing Elements](https://leetcode.com/problems/maximum-difference-between-increasing-elements/)  
**Approach:**  
- Keep track of the minimum number seen so far  
- On each iteration, if current number is greater than minNum, update `maxDiff`  
- Else, update `minNum` with the current number  

```cpp
class Solution {
public:
    int maximumDifference(vector<int>& nums) {
        int minNum = nums[0];
        int maxDiff = -1;

        for (int i = 1; i < nums.size(); ++i) {
            if (nums[i] > minNum) {
                maxDiff = max(maxDiff, nums[i] - minNum);
            } else {
                minNum = nums[i];
            }
        }

        return maxDiff;
    }
};
